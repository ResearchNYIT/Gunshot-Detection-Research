import os
import librosa
import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split

# Set paths for gunshot and background noise
gunshot_dir = "dataset/gunshot"
background_dir = "dataset/background"

# Function to extract Mel Spectrogram features
def extract_mel_spectrogram(file_path, max_pad_len=128):
    y, sr = librosa.load(file_path, sr=16000)
    mel_spec = librosa.feature.melspectrogram(y=y, sr=sr, n_mels=64)
    mel_spec = librosa.power_to_db(mel_spec, ref=np.max)
    
    if mel_spec.shape[1] < max_pad_len:
        pad_width = max_pad_len - mel_spec.shape[1]
        mel_spec = np.pad(mel_spec, ((0, 0), (0, pad_width)), mode='constant')
    else:
        mel_spec = mel_spec[:, :max_pad_len]
    
    return mel_spec

# Load data
X, y = [], []
for file in os.listdir(gunshot_dir):
    if file.endswith(".wav"):
        X.append(extract_mel_spectrogram(os.path.join(gunshot_dir, file)))
        y.append(1)  # Gunshot = 1

for file in os.listdir(background_dir):
    if file.endswith(".wav"):
        X.append(extract_mel_spectrogram(os.path.join(background_dir, file)))
        y.append(0)  # Background noise = 0

X = np.array(X).reshape(len(X), 64, 128, 1)  # Reshape for CNN
y = np.array(y)

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
